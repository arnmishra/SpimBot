For the SPIMBOT tournament, our strategy was to initially solve a static amount of puzzles. After gaining enough energy to last for a certain amount of time, the bots starts to catch and smash fruits. Through thorough testing, we realized that the ideal smash count size was 1. So for every fruit, the bot goes to the bottom to smash the fruit it currently smooshed. The program finds the first fruit that is released from the fruit_data array and fixates on it's x and y values and moves the bot's x-value until it matches the fruit's x-value. After this, we just simply wait until the fruit falls down. However in order to optimize this feature from Lab10, we check to see if the y-value distance between the fruit and the bot is < 100px. If so, the bot moves in the y-direction to catch the fruit faster and then goes back down to smash the fruit. In addition, we implemented all the Interrupts correctly so whenver a OUT_OF_ENERGY_INTERRUPT fires, we solve the same number of puzzles that we initally did in the beginning to gain an energy boost. This process of solving puzzles, smooshing and smashing fruits, and checking for out_of_energy is maintained until all 10,000,000 cycles are completed.